'use strict';

var unicode_letter = '\\u{c0}-\\u{ff}\\u{180}-\\u{24f}\\u{391}-\\u{3ff}\\u{400}-\\u{4ff}\\u{2100}-\\u{214f}\\u{2070}-\\u{2079}\\u{2080}-\\u{2089}',
    ///
unicode_id_part = '',
    ///
first_letter = '[a-zA-Z_' + unicode_letter + ']',
    subsequent_letter = '[a-zA-Z_0-9_\u2019' + unicode_letter + unicode_id_part + ']',
    ident = '' + first_letter + subsequent_letter + '*';

'use strict';

var grammar = [{ string: /"[^"]*"/ }, { keyword: /_|as|at|cofix|else|end|exists|exists2|fix|forall|for|fun|if|IF|in|let|match|mod|Prop|return|Set|then|Type|using|where|with|Axiom|Conjecture|Parameter|Parameters|Variables|Variable|Hypothesis|Hypotheses|Local|Definition|Let|Inductive|CoInductive|Fixpoint|CoFixpoint|Theorem|Lemma|Remark|Fact|Corollary|Proposition|Definition|Example/ }, { ident: new RegExp('' + ident, 'u') }, { access_ident: new RegExp('\\.' + ident, 'u') }, { special: /!|%|&&|&|@|~|\(\)|\(|\)|\*|\+\+|\+|,|\.|\.\(|\.\.|\\\/|\/\\|\/|::|:<|:=|:>|:|;|<->|>->|<-|->|-|<:|<=|<>|<|=>|=_D|=|>=|>|\?|\?=|\[|\]|\^|\{|\}|\|\||\|-|'/ }, { num: /[0-9]+/ }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9nYWxsaW5hL2dyYW1tYXIuanMiXSwibmFtZXMiOlsidW5pY29kZV9sZXR0ZXIiLCJ1bmljb2RlX2lkX3BhcnQiLCJmaXJzdF9sZXR0ZXIiLCJzdWJzZXF1ZW50X2xldHRlciIsImlkZW50IiwiZ3JhbW1hciIsInN0cmluZyIsImtleXdvcmQiLCJSZWdFeHAiLCJhY2Nlc3NfaWRlbnQiLCJzcGVjaWFsIiwibnVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsOElBQUo7QUFBQSxJQUFvSjtBQUNoSkMsb0JBREo7QUFBQSxJQUMwQjtBQUN0QkMsNEJBQTBCRixjQUExQixNQUZKO0FBQUEsSUFHSUcsMkNBQW9DSCxjQUFwQyxHQUFxREMsZUFBckQsTUFISjtBQUFBLElBSUlHLGFBQVdGLFlBQVgsR0FBMEJDLGlCQUExQixNQUpKOztBQU1BOztBQUVBLElBQUlFLFVBQVUsQ0FFWixFQUFFQyxRQUFnQixTQUFsQixFQUZZLEVBSVosRUFBRUMsU0FBZ0IsNlVBQWxCLEVBSlksRUFNWixFQUFFSCxPQUFnQixJQUFJSSxNQUFKLE1BQWNKLEtBQWQsRUFBdUIsR0FBdkIsQ0FBbEIsRUFOWSxFQVFaLEVBQUVLLGNBQWdCLElBQUlELE1BQUosU0FBaUJKLEtBQWpCLEVBQTBCLEdBQTFCLENBQWxCLEVBUlksRUFVWixFQUFFTSxTQUFnQiwwSkFBbEIsRUFWWSxFQVlaLEVBQUVDLEtBQWdCLFFBQWxCLEVBWlksQ0FBZDs7QUFnQkFDLE9BQU9DLE9BQVAsR0FBaUJSLE9BQWpCIiwiZmlsZSI6ImdyYW1tYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgdW5pY29kZV9sZXR0ZXIgPSBgXFxcXHV7YzB9LVxcXFx1e2ZmfVxcXFx1ezE4MH0tXFxcXHV7MjRmfVxcXFx1ezM5MX0tXFxcXHV7M2ZmfVxcXFx1ezQwMH0tXFxcXHV7NGZmfVxcXFx1ezIxMDB9LVxcXFx1ezIxNGZ9XFxcXHV7MjA3MH0tXFxcXHV7MjA3OX1cXFxcdXsyMDgwfS1cXFxcdXsyMDg5fWAsIC8vL1xyXG4gICAgdW5pY29kZV9pZF9wYXJ0ID0gYGAsIC8vL1xyXG4gICAgZmlyc3RfbGV0dGVyID0gYFthLXpBLVpfJHt1bmljb2RlX2xldHRlcn1dYCxcclxuICAgIHN1YnNlcXVlbnRfbGV0dGVyID0gYFthLXpBLVpfMC05X+KAmSR7dW5pY29kZV9sZXR0ZXJ9JHt1bmljb2RlX2lkX3BhcnR9XWAsXHJcbiAgICBpZGVudCA9IGAke2ZpcnN0X2xldHRlcn0ke3N1YnNlcXVlbnRfbGV0dGVyfSpgO1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIGdyYW1tYXIgPSBbXHJcblxyXG4gIHsgc3RyaW5nICAgICAgICA6IC9cIlteXCJdKlwiLyB9LFxyXG5cclxuICB7IGtleXdvcmQgICAgICAgOiAvX3xhc3xhdHxjb2ZpeHxlbHNlfGVuZHxleGlzdHN8ZXhpc3RzMnxmaXh8Zm9yYWxsfGZvcnxmdW58aWZ8SUZ8aW58bGV0fG1hdGNofG1vZHxQcm9wfHJldHVybnxTZXR8dGhlbnxUeXBlfHVzaW5nfHdoZXJlfHdpdGh8QXhpb218Q29uamVjdHVyZXxQYXJhbWV0ZXJ8UGFyYW1ldGVyc3xWYXJpYWJsZXN8VmFyaWFibGV8SHlwb3RoZXNpc3xIeXBvdGhlc2VzfExvY2FsfERlZmluaXRpb258TGV0fEluZHVjdGl2ZXxDb0luZHVjdGl2ZXxGaXhwb2ludHxDb0ZpeHBvaW50fFRoZW9yZW18TGVtbWF8UmVtYXJrfEZhY3R8Q29yb2xsYXJ5fFByb3Bvc2l0aW9ufERlZmluaXRpb258RXhhbXBsZS8gfSxcclxuXHJcbiAgeyBpZGVudCAgICAgICAgIDogbmV3IFJlZ0V4cChgJHtpZGVudH1gLCAndScpIH0sXHJcblxyXG4gIHsgYWNjZXNzX2lkZW50ICA6IG5ldyBSZWdFeHAoYFxcXFwuJHtpZGVudH1gLCAndScpIH0sXHJcblxyXG4gIHsgc3BlY2lhbCAgICAgICA6IC8hfCV8JiZ8JnxAfH58XFwoXFwpfFxcKHxcXCl8XFwqfFxcK1xcK3xcXCt8LHxcXC58XFwuXFwofFxcLlxcLnxcXFxcXFwvfFxcL1xcXFx8XFwvfDo6fDo8fDo9fDo+fDp8O3w8LT58Pi0+fDwtfC0+fC18PDp8PD18PD58PHw9Pnw9X0R8PXw+PXw+fFxcP3xcXD89fFxcW3xcXF18XFxefFxce3xcXH18XFx8XFx8fFxcfC18Jy8gfSxcclxuXHJcbiAgeyBudW0gICAgICAgICAgIDogL1swLTldKy8gfVxyXG5cclxuXTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZ3JhbW1hcjtcclxuIl19