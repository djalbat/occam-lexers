'use strict';

var unicode_letter = '\\u{c0}-\\u{ff}\\u{180}-\\u{24f}\\u{391}-\\u{3ff}\\u{400}-\\u{4ff}\\u{2100}-\\u{214f}\\u{2070}-\\u{2079}\\u{2080}-\\u{2089}',
    ///
unicode_id_part = '',
    ///
first_letter = '[a-zA-Z_' + unicode_letter + ']',
    subsequent_letter = '[a-zA-Z_0-9_\u2019' + unicode_letter + unicode_id_part + ']',
    ident = '' + first_letter + subsequent_letter + '*';

'use strict';

var grammar = [{ string: /"[^"]*"/ }, { special: /!|%|&&|&|@|~|\(\)|\(|\)|\*|\+\+|\+|,|\.|\.\(|\.\.|\\\/|\/\\|\/|::|:<|:=|:>|:|;|<->|>->|<-|->|-|<:|<=|<>|<|=>|=_D|=|>=|>|\?|\?=|\[|\]|\^|\{|\}|\|\||\|-|'/ }, { keyword: /^(?:_|as|at|cofix|else|end|exists|exists2|fix|forall|for|fun|if|IF|in|let|match|mod|Prop|return|Set|then|Type|using|where|with|Axiom|Conjecture|Parameter|Parameters|Variables|Variable|Hypothesis|Hypotheses|Local|Definition|Let|Inductive|CoInductive|Fixpoint|CoFixpoint|Theorem|Lemma|Remark|Fact|Corollary|Proposition|Definition|Example)$/ }, { ident: new RegExp('^' + ident + '$', 'u') }, { num: /^[0-9]+$/ }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9nYWxsaW5hL2dyYW1tYXIuanMiXSwibmFtZXMiOlsidW5pY29kZV9sZXR0ZXIiLCJ1bmljb2RlX2lkX3BhcnQiLCJmaXJzdF9sZXR0ZXIiLCJzdWJzZXF1ZW50X2xldHRlciIsImlkZW50IiwiZ3JhbW1hciIsInN0cmluZyIsInNwZWNpYWwiLCJrZXl3b3JkIiwiUmVnRXhwIiwibnVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsOElBQUo7QUFBQSxJQUFvSjtBQUNoSkMsb0JBREo7QUFBQSxJQUMwQjtBQUN0QkMsNEJBQTBCRixjQUExQixNQUZKO0FBQUEsSUFHSUcsMkNBQW9DSCxjQUFwQyxHQUFxREMsZUFBckQsTUFISjtBQUFBLElBSUlHLGFBQVdGLFlBQVgsR0FBMEJDLGlCQUExQixNQUpKOztBQU1BOztBQUVBLElBQUlFLFVBQVUsQ0FFWixFQUFFQyxRQUFnQixTQUFsQixFQUZZLEVBSVosRUFBRUMsU0FBZ0IsMEpBQWxCLEVBSlksRUFNWixFQUFFQyxTQUFnQixtVkFBbEIsRUFOWSxFQVFaLEVBQUVKLE9BQWdCLElBQUlLLE1BQUosT0FBZUwsS0FBZixRQUF5QixHQUF6QixDQUFsQixFQVJZLEVBVVosRUFBRU0sS0FBZ0IsVUFBbEIsRUFWWSxDQUFkOztBQWNBQyxPQUFPQyxPQUFQLEdBQWlCUCxPQUFqQiIsImZpbGUiOiJncmFtbWFyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIHVuaWNvZGVfbGV0dGVyID0gYFxcXFx1e2MwfS1cXFxcdXtmZn1cXFxcdXsxODB9LVxcXFx1ezI0Zn1cXFxcdXszOTF9LVxcXFx1ezNmZn1cXFxcdXs0MDB9LVxcXFx1ezRmZn1cXFxcdXsyMTAwfS1cXFxcdXsyMTRmfVxcXFx1ezIwNzB9LVxcXFx1ezIwNzl9XFxcXHV7MjA4MH0tXFxcXHV7MjA4OX1gLCAvLy9cclxuICAgIHVuaWNvZGVfaWRfcGFydCA9IGBgLCAvLy9cclxuICAgIGZpcnN0X2xldHRlciA9IGBbYS16QS1aXyR7dW5pY29kZV9sZXR0ZXJ9XWAsXHJcbiAgICBzdWJzZXF1ZW50X2xldHRlciA9IGBbYS16QS1aXzAtOV/igJkke3VuaWNvZGVfbGV0dGVyfSR7dW5pY29kZV9pZF9wYXJ0fV1gLFxyXG4gICAgaWRlbnQgPSBgJHtmaXJzdF9sZXR0ZXJ9JHtzdWJzZXF1ZW50X2xldHRlcn0qYDtcclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBncmFtbWFyID0gW1xyXG5cclxuICB7IHN0cmluZyAgICAgICAgOiAvXCJbXlwiXSpcIi8gfSxcclxuXHJcbiAgeyBzcGVjaWFsICAgICAgIDogLyF8JXwmJnwmfEB8fnxcXChcXCl8XFwofFxcKXxcXCp8XFwrXFwrfFxcK3wsfFxcLnxcXC5cXCh8XFwuXFwufFxcXFxcXC98XFwvXFxcXHxcXC98Ojp8Ojx8Oj18Oj58Onw7fDwtPnw+LT58PC18LT58LXw8Onw8PXw8Pnw8fD0+fD1fRHw9fD49fD58XFw/fFxcPz18XFxbfFxcXXxcXF58XFx7fFxcfXxcXHxcXHx8XFx8LXwnLyB9LFxyXG5cclxuICB7IGtleXdvcmQgICAgICAgOiAvXig/Ol98YXN8YXR8Y29maXh8ZWxzZXxlbmR8ZXhpc3RzfGV4aXN0czJ8Zml4fGZvcmFsbHxmb3J8ZnVufGlmfElGfGlufGxldHxtYXRjaHxtb2R8UHJvcHxyZXR1cm58U2V0fHRoZW58VHlwZXx1c2luZ3x3aGVyZXx3aXRofEF4aW9tfENvbmplY3R1cmV8UGFyYW1ldGVyfFBhcmFtZXRlcnN8VmFyaWFibGVzfFZhcmlhYmxlfEh5cG90aGVzaXN8SHlwb3RoZXNlc3xMb2NhbHxEZWZpbml0aW9ufExldHxJbmR1Y3RpdmV8Q29JbmR1Y3RpdmV8Rml4cG9pbnR8Q29GaXhwb2ludHxUaGVvcmVtfExlbW1hfFJlbWFya3xGYWN0fENvcm9sbGFyeXxQcm9wb3NpdGlvbnxEZWZpbml0aW9ufEV4YW1wbGUpJC8gfSxcclxuXHJcbiAgeyBpZGVudCAgICAgICAgIDogbmV3IFJlZ0V4cChgXiR7aWRlbnR9JGAsICd1JykgfSxcclxuXHJcbiAgeyBudW0gICAgICAgICAgIDogL15bMC05XSskLyB9XHJcblxyXG5dO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBncmFtbWFyO1xyXG4iXX0=