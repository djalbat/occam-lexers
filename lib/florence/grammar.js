'use strict';

var basic_latin = '\\u{21}-\\u{7E}',
    latin1_supplement = '\\u{A1}-\\u{FF}',
    mathematical_operators = '\\u{2200}-\\u{22FF}',
    supplemental_mathematical_operators = '\\u{2A00}-\\u{2AFF}',
    miscellaneous_technical = '\\u{2300}-\\u{23ff}',
    mathematical_alphanumeric_symbols = '\\u{1D400}-\\u{1D7FF}',
    unicode_character = '\n' + basic_latin + '\n' + latin1_supplement + '\n' + mathematical_operators + '\n' + supplemental_mathematical_operators + '\n' + miscellaneous_technical + '\n' + mathematical_alphanumeric_symbols + '\n',
    unicode_characters = '[' + unicode_character + ']+',
    unassigned = unicode_characters; ///

var grammar = [{ include: /^include$/ }, { special: /,|;|\{|\}|=|::|:|\(|\)|\.\.\.|\.\./ }, { keyword: /^(?:Rule|Axiom|Theorem|Lemma|Premises|Premise|Conclusion|Proof|Therefore|Suppose|Then|Hence|Variables|Variable|Metavariables|Metavariable|Constructors|Constructor|Type|Object|Definition|from|by|let|is|not|in|free|defined|undefined)$/ }, { unassigned: new RegExp('^' + unassigned + '$', 'u') }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9mbG9yZW5jZS9ncmFtbWFyLmpzIl0sIm5hbWVzIjpbImJhc2ljX2xhdGluIiwibGF0aW4xX3N1cHBsZW1lbnQiLCJtYXRoZW1hdGljYWxfb3BlcmF0b3JzIiwic3VwcGxlbWVudGFsX21hdGhlbWF0aWNhbF9vcGVyYXRvcnMiLCJtaXNjZWxsYW5lb3VzX3RlY2huaWNhbCIsIm1hdGhlbWF0aWNhbF9hbHBoYW51bWVyaWNfc3ltYm9scyIsInVuaWNvZGVfY2hhcmFjdGVyIiwidW5pY29kZV9jaGFyYWN0ZXJzIiwidW5hc3NpZ25lZCIsImdyYW1tYXIiLCJpbmNsdWRlIiwic3BlY2lhbCIsImtleXdvcmQiLCJSZWdFeHAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSwrQkFBTjtBQUFBLElBQ01DLHFDQUROO0FBQUEsSUFFTUMsOENBRk47QUFBQSxJQUdNQywyREFITjtBQUFBLElBSU1DLCtDQUpOO0FBQUEsSUFLTUMsMkRBTE47QUFBQSxJQU1NQywyQkFHSk4sV0FISSxVQUlKQyxpQkFKSSxVQUtKQyxzQkFMSSxVQU1KQyxtQ0FOSSxVQU9KQyx1QkFQSSxVQVFKQyxpQ0FSSSxPQU5OO0FBQUEsSUFpQklFLDJCQUF5QkQsaUJBQXpCLE9BakJKO0FBQUEsSUFrQklFLGFBQWFELGtCQWxCakIsQyxDQWtCc0M7O0FBRXRDLElBQU1FLFVBQVUsQ0FFZCxFQUFFQyxTQUFhLFdBQWYsRUFGYyxFQUlkLEVBQUVDLFNBQWEsb0NBQWYsRUFKYyxFQU1kLEVBQUVDLFNBQWEsME9BQWYsRUFOYyxFQVFkLEVBQUVKLFlBQWEsSUFBSUssTUFBSixPQUFlTCxVQUFmLFFBQThCLEdBQTlCLENBQWYsRUFSYyxDQUFoQjs7QUFZQU0sT0FBT0MsT0FBUCxHQUFpQk4sT0FBakIiLCJmaWxlIjoiZ3JhbW1hci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IGJhc2ljX2xhdGluID0gYFxcXFx1ezIxfS1cXFxcdXs3RX1gLFxyXG4gICAgICBsYXRpbjFfc3VwcGxlbWVudCA9IGBcXFxcdXtBMX0tXFxcXHV7RkZ9YCxcclxuICAgICAgbWF0aGVtYXRpY2FsX29wZXJhdG9ycyA9IGBcXFxcdXsyMjAwfS1cXFxcdXsyMkZGfWAsXHJcbiAgICAgIHN1cHBsZW1lbnRhbF9tYXRoZW1hdGljYWxfb3BlcmF0b3JzID0gYFxcXFx1ezJBMDB9LVxcXFx1ezJBRkZ9YCxcclxuICAgICAgbWlzY2VsbGFuZW91c190ZWNobmljYWwgPSBgXFxcXHV7MjMwMH0tXFxcXHV7MjNmZn1gLFxyXG4gICAgICBtYXRoZW1hdGljYWxfYWxwaGFudW1lcmljX3N5bWJvbHMgPSBgXFxcXHV7MUQ0MDB9LVxcXFx1ezFEN0ZGfWAsXHJcbiAgICAgIHVuaWNvZGVfY2hhcmFjdGVyID1cclxuXHJcbmBcclxuJHtiYXNpY19sYXRpbn1cclxuJHtsYXRpbjFfc3VwcGxlbWVudH1cclxuJHttYXRoZW1hdGljYWxfb3BlcmF0b3JzfVxyXG4ke3N1cHBsZW1lbnRhbF9tYXRoZW1hdGljYWxfb3BlcmF0b3JzfVxyXG4ke21pc2NlbGxhbmVvdXNfdGVjaG5pY2FsfVxyXG4ke21hdGhlbWF0aWNhbF9hbHBoYW51bWVyaWNfc3ltYm9sc31cclxuYCxcclxuXHJcbiAgICB1bmljb2RlX2NoYXJhY3RlcnMgPSBgWyR7dW5pY29kZV9jaGFyYWN0ZXJ9XStgLFxyXG4gICAgdW5hc3NpZ25lZCA9IHVuaWNvZGVfY2hhcmFjdGVyczsgIC8vL1xyXG5cclxuY29uc3QgZ3JhbW1hciA9IFtcclxuXHJcbiAgeyBpbmNsdWRlICAgIDogL15pbmNsdWRlJC8gfSxcclxuXHJcbiAgeyBzcGVjaWFsICAgIDogLyx8O3xcXHt8XFx9fD18Ojp8OnxcXCh8XFwpfFxcLlxcLlxcLnxcXC5cXC4vIH0sXHJcbiAgXHJcbiAgeyBrZXl3b3JkICAgIDogL14oPzpSdWxlfEF4aW9tfFRoZW9yZW18TGVtbWF8UHJlbWlzZXN8UHJlbWlzZXxDb25jbHVzaW9ufFByb29mfFRoZXJlZm9yZXxTdXBwb3NlfFRoZW58SGVuY2V8VmFyaWFibGVzfFZhcmlhYmxlfE1ldGF2YXJpYWJsZXN8TWV0YXZhcmlhYmxlfENvbnN0cnVjdG9yc3xDb25zdHJ1Y3RvcnxUeXBlfE9iamVjdHxEZWZpbml0aW9ufGZyb218Ynl8bGV0fGlzfG5vdHxpbnxmcmVlfGRlZmluZWR8dW5kZWZpbmVkKSQvIH0sXHJcbiAgXHJcbiAgeyB1bmFzc2lnbmVkIDogbmV3IFJlZ0V4cChgXiR7dW5hc3NpZ25lZH0kYCwgJ3UnKSB9XHJcbiAgICBcclxuXTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZ3JhbW1hcjtcclxuIl19