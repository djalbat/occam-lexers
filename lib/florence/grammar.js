'use strict';

var basic_latin = '\\u{21}-\\u{7E}',
    latin1_supplement = '\\u{A1}-\\u{FF}',
    mathematical_operators = '\\u{2200}-\\u{22FF}',
    supplemental_mathematical_operators = '\\u{2A00}-\\u{2AFF}',
    miscellaneous_technical = '\\u{2300}-\\u{23ff}',
    mathematical_alphanumeric_symbols = '\\u{1D400}-\\u{1D7FF}',
    unicode_character = '\n' + basic_latin + '\n' + latin1_supplement + '\n' + mathematical_operators + '\n' + supplemental_mathematical_operators + '\n' + miscellaneous_technical + '\n' + mathematical_alphanumeric_symbols + '\n',
    unicode_characters = '[' + unicode_character + ']+',
    unassigned = unicode_characters; ///


var grammar = [{ string: /"[^"]*"/ }, { special: /,|;|\{|\}|=|:|\(|\)/ }, { keyword: /^(?:Rule|Axiom|Theorem|Lemma|Premises|Premise|Conclusion|Proof|Therefore|Suppose|Then|Hence|Variables|Variable|Constructors|Constructor|from|by)$/ }, { unassigned: new RegExp('^' + unassigned + '$', 'u') }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9mbG9yZW5jZS9ncmFtbWFyLmpzIl0sIm5hbWVzIjpbImJhc2ljX2xhdGluIiwibGF0aW4xX3N1cHBsZW1lbnQiLCJtYXRoZW1hdGljYWxfb3BlcmF0b3JzIiwic3VwcGxlbWVudGFsX21hdGhlbWF0aWNhbF9vcGVyYXRvcnMiLCJtaXNjZWxsYW5lb3VzX3RlY2huaWNhbCIsIm1hdGhlbWF0aWNhbF9hbHBoYW51bWVyaWNfc3ltYm9scyIsInVuaWNvZGVfY2hhcmFjdGVyIiwidW5pY29kZV9jaGFyYWN0ZXJzIiwidW5hc3NpZ25lZCIsImdyYW1tYXIiLCJzdHJpbmciLCJzcGVjaWFsIiwia2V5d29yZCIsIlJlZ0V4cCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLCtCQUFKO0FBQUEsSUFDSUMscUNBREo7QUFBQSxJQUVJQyw4Q0FGSjtBQUFBLElBR0lDLDJEQUhKO0FBQUEsSUFJSUMsK0NBSko7QUFBQSxJQUtJQywyREFMSjtBQUFBLElBTUlDLDJCQUdGTixXQUhFLFVBSUZDLGlCQUpFLFVBS0ZDLHNCQUxFLFVBTUZDLG1DQU5FLFVBT0ZDLHVCQVBFLFVBUUZDLGlDQVJFLE9BTko7QUFBQSxJQWlCSUUsMkJBQXlCRCxpQkFBekIsT0FqQko7QUFBQSxJQWtCSUUsYUFBYUQsa0JBbEJqQixDLENBa0JzQzs7O0FBR3RDLElBQUlFLFVBQVUsQ0FFWixFQUFFQyxRQUFzQixTQUF4QixFQUZZLEVBSVosRUFBRUMsU0FBc0IscUJBQXhCLEVBSlksRUFNWixFQUFFQyxTQUFzQixtSkFBeEIsRUFOWSxFQVFaLEVBQUVKLFlBQXNCLElBQUlLLE1BQUosT0FBZUwsVUFBZixRQUE4QixHQUE5QixDQUF4QixFQVJZLENBQWQ7O0FBWUFNLE9BQU9DLE9BQVAsR0FBaUJOLE9BQWpCIiwiZmlsZSI6ImdyYW1tYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG52YXIgYmFzaWNfbGF0aW4gPSBgXFxcXHV7MjF9LVxcXFx1ezdFfWAsXHJcbiAgICBsYXRpbjFfc3VwcGxlbWVudCA9IGBcXFxcdXtBMX0tXFxcXHV7RkZ9YCxcclxuICAgIG1hdGhlbWF0aWNhbF9vcGVyYXRvcnMgPSBgXFxcXHV7MjIwMH0tXFxcXHV7MjJGRn1gLFxyXG4gICAgc3VwcGxlbWVudGFsX21hdGhlbWF0aWNhbF9vcGVyYXRvcnMgPSBgXFxcXHV7MkEwMH0tXFxcXHV7MkFGRn1gLFxyXG4gICAgbWlzY2VsbGFuZW91c190ZWNobmljYWwgPSBgXFxcXHV7MjMwMH0tXFxcXHV7MjNmZn1gLFxyXG4gICAgbWF0aGVtYXRpY2FsX2FscGhhbnVtZXJpY19zeW1ib2xzID0gYFxcXFx1ezFENDAwfS1cXFxcdXsxRDdGRn1gLFxyXG4gICAgdW5pY29kZV9jaGFyYWN0ZXIgPVxyXG5cclxuYFxyXG4ke2Jhc2ljX2xhdGlufVxyXG4ke2xhdGluMV9zdXBwbGVtZW50fVxyXG4ke21hdGhlbWF0aWNhbF9vcGVyYXRvcnN9XHJcbiR7c3VwcGxlbWVudGFsX21hdGhlbWF0aWNhbF9vcGVyYXRvcnN9XHJcbiR7bWlzY2VsbGFuZW91c190ZWNobmljYWx9XHJcbiR7bWF0aGVtYXRpY2FsX2FscGhhbnVtZXJpY19zeW1ib2xzfVxyXG5gLFxyXG5cclxuICAgIHVuaWNvZGVfY2hhcmFjdGVycyA9IGBbJHt1bmljb2RlX2NoYXJhY3Rlcn1dK2AsXHJcbiAgICB1bmFzc2lnbmVkID0gdW5pY29kZV9jaGFyYWN0ZXJzOyAgLy8vXHJcblxyXG5cclxudmFyIGdyYW1tYXIgPSBbXHJcblxyXG4gIHsgc3RyaW5nICAgICAgICAgICAgICA6IC9cIlteXCJdKlwiLyB9LFxyXG5cclxuICB7IHNwZWNpYWwgICAgICAgICAgICAgOiAvLHw7fFxce3xcXH18PXw6fFxcKHxcXCkvIH0sXHJcblxyXG4gIHsga2V5d29yZCAgICAgICAgICAgICA6IC9eKD86UnVsZXxBeGlvbXxUaGVvcmVtfExlbW1hfFByZW1pc2VzfFByZW1pc2V8Q29uY2x1c2lvbnxQcm9vZnxUaGVyZWZvcmV8U3VwcG9zZXxUaGVufEhlbmNlfFZhcmlhYmxlc3xWYXJpYWJsZXxDb25zdHJ1Y3RvcnN8Q29uc3RydWN0b3J8ZnJvbXxieSkkLyB9LFxyXG5cclxuICB7IHVuYXNzaWduZWQgICAgICAgICAgOiBuZXcgUmVnRXhwKGBeJHt1bmFzc2lnbmVkfSRgLCAndScpIH1cclxuICAgIFxyXG5dO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBncmFtbWFyO1xyXG4iXX0=