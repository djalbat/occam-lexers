'use strict';

var c0_controls_and_basic_latin = '!#$%&*+-.\\/0-9<>?@A-Z\\\\^_a-z~',
    latin1_supplement = '\\u{A1}-\\u{FF}',
    mathematical_operators = '\\u{2200}-\\u{22FF}',
    supplemental_mathematical_operators = '\\u{2A00}-\\u{2AFF}',
    miscellaneous_technical = '\\u{2300}-\\u{23ff}',
    mathematical_alphanumeric_symbols = '\\u{1D400}-\\u{1D7FF}',
    unicode_character = '\n' + c0_controls_and_basic_latin + '\n' + latin1_supplement + '\n' + mathematical_operators + '\n' + supplemental_mathematical_operators + '\n' + miscellaneous_technical + '\n' + mathematical_alphanumeric_symbols + '\n',
    unicode_characters = '[' + unicode_character + ']+',
    unassigned = unicode_characters; ///


var grammar = [{ string: /"[^"]*"/ }, { keyword: /Rule|Theorem|Lemma|Premises|Premise|Conclusion|Proof|Therefore|Suppose|Then|Hence|by/ }, { special: /\,|\;|\{|\}|=|\:|\(|\)/ }, { unassigned: new RegExp('' + unassigned, 'u') }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9mbG9yZW5jZS9ncmFtbWFyLmpzIl0sIm5hbWVzIjpbImMwX2NvbnRyb2xzX2FuZF9iYXNpY19sYXRpbiIsImxhdGluMV9zdXBwbGVtZW50IiwibWF0aGVtYXRpY2FsX29wZXJhdG9ycyIsInN1cHBsZW1lbnRhbF9tYXRoZW1hdGljYWxfb3BlcmF0b3JzIiwibWlzY2VsbGFuZW91c190ZWNobmljYWwiLCJtYXRoZW1hdGljYWxfYWxwaGFudW1lcmljX3N5bWJvbHMiLCJ1bmljb2RlX2NoYXJhY3RlciIsInVuaWNvZGVfY2hhcmFjdGVycyIsInVuYXNzaWduZWQiLCJncmFtbWFyIiwic3RyaW5nIiwia2V5d29yZCIsInNwZWNpYWwiLCJSZWdFeHAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxnRUFBSjtBQUFBLElBQ0lDLHFDQURKO0FBQUEsSUFFSUMsOENBRko7QUFBQSxJQUdJQywyREFISjtBQUFBLElBSUlDLCtDQUpKO0FBQUEsSUFLSUMsMkRBTEo7QUFBQSxJQU1JQywyQkFHRk4sMkJBSEUsVUFJRkMsaUJBSkUsVUFLRkMsc0JBTEUsVUFNRkMsbUNBTkUsVUFPRkMsdUJBUEUsVUFRRkMsaUNBUkUsT0FOSjtBQUFBLElBaUJJRSwyQkFBeUJELGlCQUF6QixPQWpCSjtBQUFBLElBa0JJRSxhQUFhRCxrQkFsQmpCLEMsQ0FrQnNDOzs7QUFHdEMsSUFBSUUsVUFBVSxDQUVaLEVBQUVDLFFBQXNCLFNBQXhCLEVBRlksRUFJWixFQUFFQyxTQUFzQixzRkFBeEIsRUFKWSxFQU1aLEVBQUVDLFNBQXNCLHdCQUF4QixFQU5ZLEVBUVosRUFBRUosWUFBc0IsSUFBSUssTUFBSixNQUFjTCxVQUFkLEVBQTRCLEdBQTVCLENBQXhCLEVBUlksQ0FBZDs7QUFZQU0sT0FBT0MsT0FBUCxHQUFpQk4sT0FBakIiLCJmaWxlIjoiZ3JhbW1hci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBjMF9jb250cm9sc19hbmRfYmFzaWNfbGF0aW4gPSBgISMkJSYqKy0uXFxcXC8wLTk8Pj9AQS1aXFxcXFxcXFxeX2Eten5gLFxyXG4gICAgbGF0aW4xX3N1cHBsZW1lbnQgPSBgXFxcXHV7QTF9LVxcXFx1e0ZGfWAsXHJcbiAgICBtYXRoZW1hdGljYWxfb3BlcmF0b3JzID0gYFxcXFx1ezIyMDB9LVxcXFx1ezIyRkZ9YCxcclxuICAgIHN1cHBsZW1lbnRhbF9tYXRoZW1hdGljYWxfb3BlcmF0b3JzID0gYFxcXFx1ezJBMDB9LVxcXFx1ezJBRkZ9YCxcclxuICAgIG1pc2NlbGxhbmVvdXNfdGVjaG5pY2FsID0gYFxcXFx1ezIzMDB9LVxcXFx1ezIzZmZ9YCxcclxuICAgIG1hdGhlbWF0aWNhbF9hbHBoYW51bWVyaWNfc3ltYm9scyA9IGBcXFxcdXsxRDQwMH0tXFxcXHV7MUQ3RkZ9YCxcclxuICAgIHVuaWNvZGVfY2hhcmFjdGVyID1cclxuXHJcbmBcclxuJHtjMF9jb250cm9sc19hbmRfYmFzaWNfbGF0aW59XHJcbiR7bGF0aW4xX3N1cHBsZW1lbnR9XHJcbiR7bWF0aGVtYXRpY2FsX29wZXJhdG9yc31cclxuJHtzdXBwbGVtZW50YWxfbWF0aGVtYXRpY2FsX29wZXJhdG9yc31cclxuJHttaXNjZWxsYW5lb3VzX3RlY2huaWNhbH1cclxuJHttYXRoZW1hdGljYWxfYWxwaGFudW1lcmljX3N5bWJvbHN9XHJcbmAsXHJcblxyXG4gICAgdW5pY29kZV9jaGFyYWN0ZXJzID0gYFske3VuaWNvZGVfY2hhcmFjdGVyfV0rYCxcclxuICAgIHVuYXNzaWduZWQgPSB1bmljb2RlX2NoYXJhY3RlcnM7ICAvLy9cclxuXHJcblxyXG52YXIgZ3JhbW1hciA9IFtcclxuXHJcbiAgeyBzdHJpbmcgICAgICAgICAgICAgIDogL1wiW15cIl0qXCIvIH0sXHJcblxyXG4gIHsga2V5d29yZCAgICAgICAgICAgICA6IC9SdWxlfFRoZW9yZW18TGVtbWF8UHJlbWlzZXN8UHJlbWlzZXxDb25jbHVzaW9ufFByb29mfFRoZXJlZm9yZXxTdXBwb3NlfFRoZW58SGVuY2V8YnkvIH0sXHJcblxyXG4gIHsgc3BlY2lhbCAgICAgICAgICAgICA6IC9cXCx8XFw7fFxce3xcXH18PXxcXDp8XFwofFxcKS8gfSxcclxuXHJcbiAgeyB1bmFzc2lnbmVkICAgICAgICAgIDogbmV3IFJlZ0V4cChgJHt1bmFzc2lnbmVkfWAsICd1JykgfVxyXG4gICAgXHJcbl07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGdyYW1tYXI7XHJcbiJdfQ==