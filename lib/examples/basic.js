'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var easy = require('easy');

var Example = require('../example'),
    BasicLexer = require('../basic/lexer');

var terminalSymbolsRegExpPatternTextareaSelector = 'textarea#terminalSymbolsRegExpPattern',
    terminalSymbolsRegExpPattern = '\\+|\\-|\\*|\\/|\\(|\\)|\\d+';

var Textarea = easy.Textarea;


var terminalSymbolsRegExpPatternTextarea = void 0,
    lexer = null;

var BasicExample = function () {
  function BasicExample() {
    _classCallCheck(this, BasicExample);
  }

  _createClass(BasicExample, null, [{
    key: 'run',
    value: function run() {
      terminalSymbolsRegExpPatternTextarea = new Textarea(terminalSymbolsRegExpPatternTextareaSelector);

      var terminalSymbolsRegExpPatternTextareaValue = terminalSymbolsRegExpPattern; ///

      terminalSymbolsRegExpPatternTextarea.setValue(terminalSymbolsRegExpPatternTextareaValue);

      terminalSymbolsRegExpPatternTextarea.onChange(function () {
        update();
      });

      Example.contentTextareaOnKeyUp(function () {
        update();
      });

      update();
    }
  }]);

  return BasicExample;
}();

module.exports = BasicExample;

function update() {
  updateLexer();

  if (lexer !== null) {
    Example.updateTokens(lexer);
  } else {
    Example.clearTokens();
  }
}

function updateLexer() {
  var terminalSymbolsRegExpPatternInputValue = terminalSymbolsRegExpPatternTextarea.getValue(),
      terminalSymbolsRegExpPattern = terminalSymbolsRegExpPatternInputValue,
      ///
  terminalSymbolsRegExpPatternIsValid = regExpPatternIsValid(terminalSymbolsRegExpPattern);

  if (terminalSymbolsRegExpPatternIsValid) {
    var terminalSymbolsRegExp = new RegExp(terminalSymbolsRegExpPattern),
        grammar = [{ terminalSymbol: terminalSymbolsRegExp }];

    lexer = BasicLexer.fromGrammar(grammar);

    terminalSymbolsRegExpPatternTextarea.removeClass('error');
  } else {
    terminalSymbolsRegExpPatternTextarea.addClass('error');

    lexer = null;
  }
}

function regExpPatternIsValid(regExpPattern) {
  var valid = true;

  try {
    new RegExp(regExpPattern);
  } catch (error) {
    valid = false;
  }

  return valid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9iYXNpYy5qcyJdLCJuYW1lcyI6WyJlYXN5IiwicmVxdWlyZSIsIkV4YW1wbGUiLCJCYXNpY0xleGVyIiwidGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVyblRleHRhcmVhU2VsZWN0b3IiLCJ0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuIiwiVGV4dGFyZWEiLCJ0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuVGV4dGFyZWEiLCJsZXhlciIsIkJhc2ljRXhhbXBsZSIsInRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5UZXh0YXJlYVZhbHVlIiwic2V0VmFsdWUiLCJvbkNoYW5nZSIsInVwZGF0ZSIsImNvbnRlbnRUZXh0YXJlYU9uS2V5VXAiLCJtb2R1bGUiLCJleHBvcnRzIiwidXBkYXRlTGV4ZXIiLCJ1cGRhdGVUb2tlbnMiLCJjbGVhclRva2VucyIsInRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5JbnB1dFZhbHVlIiwiZ2V0VmFsdWUiLCJ0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuSXNWYWxpZCIsInJlZ0V4cFBhdHRlcm5Jc1ZhbGlkIiwidGVybWluYWxTeW1ib2xzUmVnRXhwIiwiUmVnRXhwIiwiZ3JhbW1hciIsInRlcm1pbmFsU3ltYm9sIiwiZnJvbUdyYW1tYXIiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwicmVnRXhwUGF0dGVybiIsInZhbGlkIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFFQSxJQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxJQUFNQyxVQUFVRCxRQUFRLFlBQVIsQ0FBaEI7QUFBQSxJQUNNRSxhQUFhRixRQUFRLGdCQUFSLENBRG5COztBQUdBLElBQU1HLCtDQUErQyx1Q0FBckQ7QUFBQSxJQUNNQyw2REFETjs7SUFHUUMsUSxHQUFhTixJLENBQWJNLFE7OztBQUVSLElBQUlDLDZDQUFKO0FBQUEsSUFDSUMsUUFBUSxJQURaOztJQUdNQyxZOzs7Ozs7OzBCQUNTO0FBQ1hGLDZDQUF1QyxJQUFJRCxRQUFKLENBQWFGLDRDQUFiLENBQXZDOztBQUVBLFVBQU1NLDRDQUE0Q0wsNEJBQWxELENBSFcsQ0FHcUU7O0FBRWhGRSwyQ0FBcUNJLFFBQXJDLENBQThDRCx5Q0FBOUM7O0FBRUFILDJDQUFxQ0ssUUFBckMsQ0FBOEMsWUFBVztBQUN2REM7QUFDRCxPQUZEOztBQUlBWCxjQUFRWSxzQkFBUixDQUErQixZQUFXO0FBQ3hDRDtBQUNELE9BRkQ7O0FBSUFBO0FBQ0Q7Ozs7OztBQUdIRSxPQUFPQyxPQUFQLEdBQWlCUCxZQUFqQjs7QUFFQSxTQUFTSSxNQUFULEdBQWtCO0FBQ2hCSTs7QUFFQSxNQUFJVCxVQUFVLElBQWQsRUFBb0I7QUFDbEJOLFlBQVFnQixZQUFSLENBQXFCVixLQUFyQjtBQUNELEdBRkQsTUFFTztBQUNMTixZQUFRaUIsV0FBUjtBQUNEO0FBQ0Y7O0FBRUQsU0FBU0YsV0FBVCxHQUF1QjtBQUNyQixNQUFNRyx5Q0FBeUNiLHFDQUFxQ2MsUUFBckMsRUFBL0M7QUFBQSxNQUNJaEIsK0JBQStCZSxzQ0FEbkM7QUFBQSxNQUM0RTtBQUN4RUUsd0NBQXNDQyxxQkFBcUJsQiw0QkFBckIsQ0FGMUM7O0FBSUEsTUFBSWlCLG1DQUFKLEVBQXlDO0FBQ3ZDLFFBQU1FLHdCQUF3QixJQUFJQyxNQUFKLENBQVdwQiw0QkFBWCxDQUE5QjtBQUFBLFFBQ01xQixVQUFVLENBQ1IsRUFBRUMsZ0JBQWlCSCxxQkFBbkIsRUFEUSxDQURoQjs7QUFLQWhCLFlBQVFMLFdBQVd5QixXQUFYLENBQXVCRixPQUF2QixDQUFSOztBQUVBbkIseUNBQXFDc0IsV0FBckMsQ0FBaUQsT0FBakQ7QUFDRCxHQVRELE1BU087QUFDTHRCLHlDQUFxQ3VCLFFBQXJDLENBQThDLE9BQTlDOztBQUVBdEIsWUFBUSxJQUFSO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTZSxvQkFBVCxDQUE4QlEsYUFBOUIsRUFBNkM7QUFDM0MsTUFBSUMsUUFBUSxJQUFaOztBQUVBLE1BQUk7QUFDRixRQUFJUCxNQUFKLENBQVdNLGFBQVg7QUFDRCxHQUZELENBR0EsT0FBT0UsS0FBUCxFQUFjO0FBQ1pELFlBQVEsS0FBUjtBQUNEOztBQUVELFNBQU9BLEtBQVA7QUFDRCIsImZpbGUiOiJiYXNpYy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZWFzeSA9IHJlcXVpcmUoJ2Vhc3knKTtcblxuY29uc3QgRXhhbXBsZSA9IHJlcXVpcmUoJy4uL2V4YW1wbGUnKSxcbiAgICAgIEJhc2ljTGV4ZXIgPSByZXF1aXJlKCcuLi9iYXNpYy9sZXhlcicpO1xuXG5jb25zdCB0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuVGV4dGFyZWFTZWxlY3RvciA9ICd0ZXh0YXJlYSN0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuJyxcbiAgICAgIHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm4gPSBgXFxcXCt8XFxcXC18XFxcXCp8XFxcXC98XFxcXCh8XFxcXCl8XFxcXGQrYDtcblxuY29uc3QgeyBUZXh0YXJlYSB9ID0gZWFzeTtcblxubGV0IHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5UZXh0YXJlYSxcbiAgICBsZXhlciA9IG51bGw7XG5cbmNsYXNzIEJhc2ljRXhhbXBsZSB7XG4gIHN0YXRpYyBydW4oKSB7XG4gICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVyblRleHRhcmVhID0gbmV3IFRleHRhcmVhKHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5UZXh0YXJlYVNlbGVjdG9yKTtcblxuICAgIGNvbnN0IHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5UZXh0YXJlYVZhbHVlID0gdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybjsgLy8vXG5cbiAgICB0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuVGV4dGFyZWEuc2V0VmFsdWUodGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVyblRleHRhcmVhVmFsdWUpO1xuXG4gICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVyblRleHRhcmVhLm9uQ2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgICAgdXBkYXRlKCk7XG4gICAgfSk7XG5cbiAgICBFeGFtcGxlLmNvbnRlbnRUZXh0YXJlYU9uS2V5VXAoZnVuY3Rpb24oKSB7XG4gICAgICB1cGRhdGUoKTtcbiAgICB9KTtcblxuICAgIHVwZGF0ZSgpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmFzaWNFeGFtcGxlO1xuXG5mdW5jdGlvbiB1cGRhdGUoKSB7XG4gIHVwZGF0ZUxleGVyKCk7XG5cbiAgaWYgKGxleGVyICE9PSBudWxsKSB7XG4gICAgRXhhbXBsZS51cGRhdGVUb2tlbnMobGV4ZXIpO1xuICB9IGVsc2Uge1xuICAgIEV4YW1wbGUuY2xlYXJUb2tlbnMoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMZXhlcigpIHtcbiAgY29uc3QgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklucHV0VmFsdWUgPSB0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuVGV4dGFyZWEuZ2V0VmFsdWUoKSxcbiAgICAgIHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm4gPSB0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuSW5wdXRWYWx1ZSwgIC8vL1xuICAgICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklzVmFsaWQgPSByZWdFeHBQYXR0ZXJuSXNWYWxpZCh0ZXJtaW5hbFN5bWJvbHNSZWdFeHBQYXR0ZXJuKTtcblxuICBpZiAodGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVybklzVmFsaWQpIHtcbiAgICBjb25zdCB0ZXJtaW5hbFN5bWJvbHNSZWdFeHAgPSBuZXcgUmVnRXhwKHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm4pLFxuICAgICAgICAgIGdyYW1tYXIgPSBbXG4gICAgICAgICAgICB7IHRlcm1pbmFsU3ltYm9sIDogdGVybWluYWxTeW1ib2xzUmVnRXhwIH1cbiAgICAgICAgICBdO1xuXG4gICAgbGV4ZXIgPSBCYXNpY0xleGVyLmZyb21HcmFtbWFyKGdyYW1tYXIpO1xuXG4gICAgdGVybWluYWxTeW1ib2xzUmVnRXhwUGF0dGVyblRleHRhcmVhLnJlbW92ZUNsYXNzKCdlcnJvcicpO1xuICB9IGVsc2Uge1xuICAgIHRlcm1pbmFsU3ltYm9sc1JlZ0V4cFBhdHRlcm5UZXh0YXJlYS5hZGRDbGFzcygnZXJyb3InKTtcblxuICAgIGxleGVyID0gbnVsbDtcbiAgfVxufVxuXG5mdW5jdGlvbiByZWdFeHBQYXR0ZXJuSXNWYWxpZChyZWdFeHBQYXR0ZXJuKSB7XG4gIGxldCB2YWxpZCA9IHRydWU7XG5cbiAgdHJ5IHtcbiAgICBuZXcgUmVnRXhwKHJlZ0V4cFBhdHRlcm4pO1xuICB9XG4gIGNhdGNoIChlcnJvcikge1xuICAgIHZhbGlkID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdmFsaWQ7XG59XG4iXX0=