"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.middleOfMultiLineCommentType = exports.startOfMultiLineCommentType = exports.endOfMultiLineCommentType = exports.singleLineCommentType = exports.brokenStringLiteralType = exports.regularExpressionType = exports.brokenCommentType = exports.stringLiteralType = exports.whitespaceType = exports.endOfLineType = exports.commentType = exports.nameType = exports.typeType = void 0;
var typeType = "type";
exports.typeType = typeType;
var nameType = "name";
exports.nameType = nameType;
var commentType = "comment";
exports.commentType = commentType;
var endOfLineType = "end-of-line";
exports.endOfLineType = endOfLineType;
var whitespaceType = "whitespace";
exports.whitespaceType = whitespaceType;
var stringLiteralType = "string-literal";
exports.stringLiteralType = stringLiteralType;
var brokenCommentType = "broken-c0mment"; ///

exports.brokenCommentType = brokenCommentType;
var regularExpressionType = "regular-expression";
exports.regularExpressionType = regularExpressionType;
var brokenStringLiteralType = "broken-string-literal";
exports.brokenStringLiteralType = brokenStringLiteralType;
var singleLineCommentType = "single-line ".concat(commentType);
exports.singleLineCommentType = singleLineCommentType;
var endOfMultiLineCommentType = "end-of-multi-line ".concat(commentType);
exports.endOfMultiLineCommentType = endOfMultiLineCommentType;
var startOfMultiLineCommentType = "start-of-multi-line ".concat(commentType);
exports.startOfMultiLineCommentType = startOfMultiLineCommentType;
var middleOfMultiLineCommentType = "middle-of-multi-line ".concat(commentType);
exports.middleOfMultiLineCommentType = middleOfMultiLineCommentType;
var _default = {
  typeType: typeType,
  nameType: nameType,
  commentType: commentType,
  endOfLineType: endOfLineType,
  whitespaceType: whitespaceType,
  stringLiteralType: stringLiteralType,
  brokenCommentType: brokenCommentType,
  regularExpressionType: regularExpressionType,
  brokenStringLiteralType: brokenStringLiteralType,
  singleLineCommentType: singleLineCommentType,
  endOfMultiLineCommentType: endOfMultiLineCommentType,
  startOfMultiLineCommentType: startOfMultiLineCommentType,
  middleOfMultiLineCommentType: middleOfMultiLineCommentType
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVzLmpzIl0sIm5hbWVzIjpbInR5cGVUeXBlIiwibmFtZVR5cGUiLCJjb21tZW50VHlwZSIsImVuZE9mTGluZVR5cGUiLCJ3aGl0ZXNwYWNlVHlwZSIsInN0cmluZ0xpdGVyYWxUeXBlIiwiYnJva2VuQ29tbWVudFR5cGUiLCJyZWd1bGFyRXhwcmVzc2lvblR5cGUiLCJicm9rZW5TdHJpbmdMaXRlcmFsVHlwZSIsInNpbmdsZUxpbmVDb21tZW50VHlwZSIsImVuZE9mTXVsdGlMaW5lQ29tbWVudFR5cGUiLCJzdGFydE9mTXVsdGlMaW5lQ29tbWVudFR5cGUiLCJtaWRkbGVPZk11bHRpTGluZUNvbW1lbnRUeXBlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBRU8sSUFBTUEsUUFBUSxHQUFHLE1BQWpCOztBQUNBLElBQU1DLFFBQVEsR0FBRyxNQUFqQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsU0FBcEI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHLGFBQXRCOztBQUNBLElBQU1DLGNBQWMsR0FBRyxZQUF2Qjs7QUFDQSxJQUFNQyxpQkFBaUIsR0FBRyxnQkFBMUI7O0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsZ0JBQTFCLEMsQ0FBNkM7OztBQUM3QyxJQUFNQyxxQkFBcUIsR0FBRyxvQkFBOUI7O0FBQ0EsSUFBTUMsdUJBQXVCLEdBQUcsdUJBQWhDOztBQUNBLElBQU1DLHFCQUFxQix5QkFBa0JQLFdBQWxCLENBQTNCOztBQUNBLElBQU1RLHlCQUF5QiwrQkFBd0JSLFdBQXhCLENBQS9COztBQUNBLElBQU1TLDJCQUEyQixpQ0FBMEJULFdBQTFCLENBQWpDOztBQUNBLElBQU1VLDRCQUE0QixrQ0FBMkJWLFdBQTNCLENBQWxDOztlQUVRO0FBQ2JGLEVBQUFBLFFBQVEsRUFBUkEsUUFEYTtBQUViQyxFQUFBQSxRQUFRLEVBQVJBLFFBRmE7QUFHYkMsRUFBQUEsV0FBVyxFQUFYQSxXQUhhO0FBSWJDLEVBQUFBLGFBQWEsRUFBYkEsYUFKYTtBQUtiQyxFQUFBQSxjQUFjLEVBQWRBLGNBTGE7QUFNYkMsRUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFOYTtBQU9iQyxFQUFBQSxpQkFBaUIsRUFBakJBLGlCQVBhO0FBUWJDLEVBQUFBLHFCQUFxQixFQUFyQkEscUJBUmE7QUFTYkMsRUFBQUEsdUJBQXVCLEVBQXZCQSx1QkFUYTtBQVViQyxFQUFBQSxxQkFBcUIsRUFBckJBLHFCQVZhO0FBV2JDLEVBQUFBLHlCQUF5QixFQUF6QkEseUJBWGE7QUFZYkMsRUFBQUEsMkJBQTJCLEVBQTNCQSwyQkFaYTtBQWFiQyxFQUFBQSw0QkFBNEIsRUFBNUJBO0FBYmEsQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgY29uc3QgdHlwZVR5cGUgPSBcInR5cGVcIjtcbmV4cG9ydCBjb25zdCBuYW1lVHlwZSA9IFwibmFtZVwiO1xuZXhwb3J0IGNvbnN0IGNvbW1lbnRUeXBlID0gXCJjb21tZW50XCI7XG5leHBvcnQgY29uc3QgZW5kT2ZMaW5lVHlwZSA9IFwiZW5kLW9mLWxpbmVcIjtcbmV4cG9ydCBjb25zdCB3aGl0ZXNwYWNlVHlwZSA9IFwid2hpdGVzcGFjZVwiO1xuZXhwb3J0IGNvbnN0IHN0cmluZ0xpdGVyYWxUeXBlID0gXCJzdHJpbmctbGl0ZXJhbFwiO1xuZXhwb3J0IGNvbnN0IGJyb2tlbkNvbW1lbnRUeXBlID0gXCJicm9rZW4tYzBtbWVudFwiOyAgLy8vXG5leHBvcnQgY29uc3QgcmVndWxhckV4cHJlc3Npb25UeXBlID0gXCJyZWd1bGFyLWV4cHJlc3Npb25cIjtcbmV4cG9ydCBjb25zdCBicm9rZW5TdHJpbmdMaXRlcmFsVHlwZSA9IFwiYnJva2VuLXN0cmluZy1saXRlcmFsXCI7XG5leHBvcnQgY29uc3Qgc2luZ2xlTGluZUNvbW1lbnRUeXBlID0gYHNpbmdsZS1saW5lICR7Y29tbWVudFR5cGV9YDtcbmV4cG9ydCBjb25zdCBlbmRPZk11bHRpTGluZUNvbW1lbnRUeXBlID0gYGVuZC1vZi1tdWx0aS1saW5lICR7Y29tbWVudFR5cGV9YDtcbmV4cG9ydCBjb25zdCBzdGFydE9mTXVsdGlMaW5lQ29tbWVudFR5cGUgPSBgc3RhcnQtb2YtbXVsdGktbGluZSAke2NvbW1lbnRUeXBlfWA7XG5leHBvcnQgY29uc3QgbWlkZGxlT2ZNdWx0aUxpbmVDb21tZW50VHlwZSA9IGBtaWRkbGUtb2YtbXVsdGktbGluZSAke2NvbW1lbnRUeXBlfWA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdHlwZVR5cGUsXG4gIG5hbWVUeXBlLFxuICBjb21tZW50VHlwZSxcbiAgZW5kT2ZMaW5lVHlwZSxcbiAgd2hpdGVzcGFjZVR5cGUsXG4gIHN0cmluZ0xpdGVyYWxUeXBlLFxuICBicm9rZW5Db21tZW50VHlwZSxcbiAgcmVndWxhckV4cHJlc3Npb25UeXBlLFxuICBicm9rZW5TdHJpbmdMaXRlcmFsVHlwZSxcbiAgc2luZ2xlTGluZUNvbW1lbnRUeXBlLFxuICBlbmRPZk11bHRpTGluZUNvbW1lbnRUeXBlLFxuICBzdGFydE9mTXVsdGlMaW5lQ29tbWVudFR5cGUsXG4gIG1pZGRsZU9mTXVsdGlMaW5lQ29tbWVudFR5cGVcbn07XG4iXX0=