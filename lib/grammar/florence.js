'use strict';

var basic_latin = '\\u{21}-\\u{7E}',
    latin1_supplement = '\\u{A1}-\\u{FF}',
    mathematical_operators = '\\u{2200}-\\u{22FF}',
    supplemental_mathematical_operators = '\\u{2A00}-\\u{2AFF}',
    miscellaneous_technical = '\\u{2300}-\\u{23ff}',
    mathematical_alphanumeric_symbols = '\\u{1D400}-\\u{1D7FF}',
    unicode_character = '\n' + basic_latin + '\n' + latin1_supplement + '\n' + mathematical_operators + '\n' + supplemental_mathematical_operators + '\n' + miscellaneous_technical + '\n' + mathematical_alphanumeric_symbols + '\n',
    unicode_characters = '[' + unicode_character + ']+',
    unassigned = unicode_characters; ///

var grammar = [{ string: /"[^"]*"/ }, { special: /,|;|\{|\}|=|:|\(|\)|\.\.\.|\.\./ }, { include: /^include$/ }, { keyword: /^(?:Rule|Axiom|Theorem|Lemma|Premises|Premise|Conclusion|Proof|Therefore|Suppose|Then|Hence|Variables|Variable|Constructors|Constructor|from|by)$/ }, { unassigned: new RegExp('^' + unassigned + '$', 'u') }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ncmFtbWFyL2Zsb3JlbmNlLmpzIl0sIm5hbWVzIjpbImJhc2ljX2xhdGluIiwibGF0aW4xX3N1cHBsZW1lbnQiLCJtYXRoZW1hdGljYWxfb3BlcmF0b3JzIiwic3VwcGxlbWVudGFsX21hdGhlbWF0aWNhbF9vcGVyYXRvcnMiLCJtaXNjZWxsYW5lb3VzX3RlY2huaWNhbCIsIm1hdGhlbWF0aWNhbF9hbHBoYW51bWVyaWNfc3ltYm9scyIsInVuaWNvZGVfY2hhcmFjdGVyIiwidW5pY29kZV9jaGFyYWN0ZXJzIiwidW5hc3NpZ25lZCIsImdyYW1tYXIiLCJzdHJpbmciLCJzcGVjaWFsIiwiaW5jbHVkZSIsImtleXdvcmQiLCJSZWdFeHAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSwrQkFBSjtBQUFBLElBQ0lDLHFDQURKO0FBQUEsSUFFSUMsOENBRko7QUFBQSxJQUdJQywyREFISjtBQUFBLElBSUlDLCtDQUpKO0FBQUEsSUFLSUMsMkRBTEo7QUFBQSxJQU1JQywyQkFHRk4sV0FIRSxVQUlGQyxpQkFKRSxVQUtGQyxzQkFMRSxVQU1GQyxtQ0FORSxVQU9GQyx1QkFQRSxVQVFGQyxpQ0FSRSxPQU5KO0FBQUEsSUFpQklFLDJCQUF5QkQsaUJBQXpCLE9BakJKO0FBQUEsSUFrQklFLGFBQWFELGtCQWxCakIsQyxDQWtCc0M7O0FBRXRDLElBQUlFLFVBQVUsQ0FFWixFQUFFQyxRQUFzQixTQUF4QixFQUZZLEVBSVosRUFBRUMsU0FBc0IsaUNBQXhCLEVBSlksRUFNWixFQUFFQyxTQUFzQixXQUF4QixFQU5ZLEVBUVosRUFBRUMsU0FBc0IsbUpBQXhCLEVBUlksRUFVWixFQUFFTCxZQUFzQixJQUFJTSxNQUFKLE9BQWVOLFVBQWYsUUFBOEIsR0FBOUIsQ0FBeEIsRUFWWSxDQUFkOztBQWNBTyxPQUFPQyxPQUFQLEdBQWlCUCxPQUFqQiIsImZpbGUiOiJmbG9yZW5jZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBiYXNpY19sYXRpbiA9IGBcXFxcdXsyMX0tXFxcXHV7N0V9YCxcclxuICAgIGxhdGluMV9zdXBwbGVtZW50ID0gYFxcXFx1e0ExfS1cXFxcdXtGRn1gLFxyXG4gICAgbWF0aGVtYXRpY2FsX29wZXJhdG9ycyA9IGBcXFxcdXsyMjAwfS1cXFxcdXsyMkZGfWAsXHJcbiAgICBzdXBwbGVtZW50YWxfbWF0aGVtYXRpY2FsX29wZXJhdG9ycyA9IGBcXFxcdXsyQTAwfS1cXFxcdXsyQUZGfWAsXHJcbiAgICBtaXNjZWxsYW5lb3VzX3RlY2huaWNhbCA9IGBcXFxcdXsyMzAwfS1cXFxcdXsyM2ZmfWAsXHJcbiAgICBtYXRoZW1hdGljYWxfYWxwaGFudW1lcmljX3N5bWJvbHMgPSBgXFxcXHV7MUQ0MDB9LVxcXFx1ezFEN0ZGfWAsXHJcbiAgICB1bmljb2RlX2NoYXJhY3RlciA9XHJcblxyXG5gXHJcbiR7YmFzaWNfbGF0aW59XHJcbiR7bGF0aW4xX3N1cHBsZW1lbnR9XHJcbiR7bWF0aGVtYXRpY2FsX29wZXJhdG9yc31cclxuJHtzdXBwbGVtZW50YWxfbWF0aGVtYXRpY2FsX29wZXJhdG9yc31cclxuJHttaXNjZWxsYW5lb3VzX3RlY2huaWNhbH1cclxuJHttYXRoZW1hdGljYWxfYWxwaGFudW1lcmljX3N5bWJvbHN9XHJcbmAsXHJcblxyXG4gICAgdW5pY29kZV9jaGFyYWN0ZXJzID0gYFske3VuaWNvZGVfY2hhcmFjdGVyfV0rYCxcclxuICAgIHVuYXNzaWduZWQgPSB1bmljb2RlX2NoYXJhY3RlcnM7ICAvLy9cclxuXHJcbnZhciBncmFtbWFyID0gW1xyXG5cclxuICB7IHN0cmluZyAgICAgICAgICAgICAgOiAvXCJbXlwiXSpcIi8gfSxcclxuXHJcbiAgeyBzcGVjaWFsICAgICAgICAgICAgIDogLyx8O3xcXHt8XFx9fD18OnxcXCh8XFwpfFxcLlxcLlxcLnxcXC5cXC4vIH0sXHJcblxyXG4gIHsgaW5jbHVkZSAgICAgICAgICAgICA6IC9eaW5jbHVkZSQvIH0sXHJcblxyXG4gIHsga2V5d29yZCAgICAgICAgICAgICA6IC9eKD86UnVsZXxBeGlvbXxUaGVvcmVtfExlbW1hfFByZW1pc2VzfFByZW1pc2V8Q29uY2x1c2lvbnxQcm9vZnxUaGVyZWZvcmV8U3VwcG9zZXxUaGVufEhlbmNlfFZhcmlhYmxlc3xWYXJpYWJsZXxDb25zdHJ1Y3RvcnN8Q29uc3RydWN0b3J8ZnJvbXxieSkkLyB9LFxyXG5cclxuICB7IHVuYXNzaWduZWQgICAgICAgICAgOiBuZXcgUmVnRXhwKGBeJHt1bmFzc2lnbmVkfSRgLCAndScpIH1cclxuICAgIFxyXG5dO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBncmFtbWFyO1xyXG4iXX0=