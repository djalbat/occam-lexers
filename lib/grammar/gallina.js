'use strict';

var unicode_letter = '\\u{c0}-\\u{ff}\\u{180}-\\u{24f}\\u{391}-\\u{3ff}\\u{400}-\\u{4ff}\\u{2100}-\\u{214f}\\u{2070}-\\u{2079}\\u{2080}-\\u{2089}',
    ///
unicode_id_part = '',
    ///
first_letter = '[a-zA-Z_' + unicode_letter + ']',
    subsequent_letter = '[a-zA-Z_0-9_\u2019' + unicode_letter + unicode_id_part + ']',
    ident = '' + first_letter + subsequent_letter + '*';

'use strict';

var grammar = [{ special: /!|%|&&|&|@|~|\(\)|\(|\)|\*|\+\+|\+|,|\.|\.\(|\.\.|\\\/|\/\\|\/|::|:<|:=|:>|:|;|<->|>->|<-|->|-|<:|<=|<>|<|=>|=_D|=|>=|>|\?|\?=|\[|\]|\^|\{|\}|\|\||\|-|'/ }, { keyword: /^(?:_|as|at|cofix|else|end|exists|exists2|fix|forall|for|fun|if|IF|in|let|match|mod|Prop|return|Set|then|Type|using|where|with|Axiom|Conjecture|Parameter|Parameters|Variables|Variable|Hypothesis|Hypotheses|Local|Definition|Let|Inductive|CoInductive|Fixpoint|CoFixpoint|Theorem|Lemma|Remark|Fact|Corollary|Proposition|Definition|Example)$/ }, { ident: new RegExp('^' + ident + '$', 'u') }, { num: /^[0-9]+$/ }];

module.exports = grammar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9ncmFtbWFyL2dhbGxpbmEuanMiXSwibmFtZXMiOlsidW5pY29kZV9sZXR0ZXIiLCJ1bmljb2RlX2lkX3BhcnQiLCJmaXJzdF9sZXR0ZXIiLCJzdWJzZXF1ZW50X2xldHRlciIsImlkZW50IiwiZ3JhbW1hciIsInNwZWNpYWwiLCJrZXl3b3JkIiwiUmVnRXhwIiwibnVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsOElBQUo7QUFBQSxJQUFvSjtBQUNoSkMsb0JBREo7QUFBQSxJQUMwQjtBQUN0QkMsNEJBQTBCRixjQUExQixNQUZKO0FBQUEsSUFHSUcsMkNBQW9DSCxjQUFwQyxHQUFxREMsZUFBckQsTUFISjtBQUFBLElBSUlHLGFBQVdGLFlBQVgsR0FBMEJDLGlCQUExQixNQUpKOztBQU1BOztBQUVBLElBQUlFLFVBQVUsQ0FFWixFQUFFQyxTQUFVLDBKQUFaLEVBRlksRUFJWixFQUFFQyxTQUFVLG1WQUFaLEVBSlksRUFNWixFQUFFSCxPQUFVLElBQUlJLE1BQUosT0FBZUosS0FBZixRQUF5QixHQUF6QixDQUFaLEVBTlksRUFRWixFQUFFSyxLQUFVLFVBQVosRUFSWSxDQUFkOztBQVlBQyxPQUFPQyxPQUFQLEdBQWlCTixPQUFqQiIsImZpbGUiOiJnYWxsaW5hLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIHVuaWNvZGVfbGV0dGVyID0gYFxcXFx1e2MwfS1cXFxcdXtmZn1cXFxcdXsxODB9LVxcXFx1ezI0Zn1cXFxcdXszOTF9LVxcXFx1ezNmZn1cXFxcdXs0MDB9LVxcXFx1ezRmZn1cXFxcdXsyMTAwfS1cXFxcdXsyMTRmfVxcXFx1ezIwNzB9LVxcXFx1ezIwNzl9XFxcXHV7MjA4MH0tXFxcXHV7MjA4OX1gLCAvLy9cclxuICAgIHVuaWNvZGVfaWRfcGFydCA9IGBgLCAvLy9cclxuICAgIGZpcnN0X2xldHRlciA9IGBbYS16QS1aXyR7dW5pY29kZV9sZXR0ZXJ9XWAsXHJcbiAgICBzdWJzZXF1ZW50X2xldHRlciA9IGBbYS16QS1aXzAtOV/igJkke3VuaWNvZGVfbGV0dGVyfSR7dW5pY29kZV9pZF9wYXJ0fV1gLFxyXG4gICAgaWRlbnQgPSBgJHtmaXJzdF9sZXR0ZXJ9JHtzdWJzZXF1ZW50X2xldHRlcn0qYDtcclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBncmFtbWFyID0gW1xyXG5cclxuICB7IHNwZWNpYWwgOiAvIXwlfCYmfCZ8QHx+fFxcKFxcKXxcXCh8XFwpfFxcKnxcXCtcXCt8XFwrfCx8XFwufFxcLlxcKHxcXC5cXC58XFxcXFxcL3xcXC9cXFxcfFxcL3w6Onw6PHw6PXw6Pnw6fDt8PC0+fD4tPnw8LXwtPnwtfDw6fDw9fDw+fDx8PT58PV9EfD18Pj18PnxcXD98XFw/PXxcXFt8XFxdfFxcXnxcXHt8XFx9fFxcfFxcfHxcXHwtfCcvIH0sXHJcblxyXG4gIHsga2V5d29yZCA6IC9eKD86X3xhc3xhdHxjb2ZpeHxlbHNlfGVuZHxleGlzdHN8ZXhpc3RzMnxmaXh8Zm9yYWxsfGZvcnxmdW58aWZ8SUZ8aW58bGV0fG1hdGNofG1vZHxQcm9wfHJldHVybnxTZXR8dGhlbnxUeXBlfHVzaW5nfHdoZXJlfHdpdGh8QXhpb218Q29uamVjdHVyZXxQYXJhbWV0ZXJ8UGFyYW1ldGVyc3xWYXJpYWJsZXN8VmFyaWFibGV8SHlwb3RoZXNpc3xIeXBvdGhlc2VzfExvY2FsfERlZmluaXRpb258TGV0fEluZHVjdGl2ZXxDb0luZHVjdGl2ZXxGaXhwb2ludHxDb0ZpeHBvaW50fFRoZW9yZW18TGVtbWF8UmVtYXJrfEZhY3R8Q29yb2xsYXJ5fFByb3Bvc2l0aW9ufERlZmluaXRpb258RXhhbXBsZSkkLyB9LFxyXG5cclxuICB7IGlkZW50ICAgOiBuZXcgUmVnRXhwKGBeJHtpZGVudH0kYCwgJ3UnKSB9LFxyXG5cclxuICB7IG51bSAgICAgOiAvXlswLTldKyQvIH1cclxuXHJcbl07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGdyYW1tYXI7XHJcbiJdfQ==